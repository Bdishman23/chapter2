---
title: "Chapter2"
format:
  html
embed-resources:
  true
params:
  taxon: Tyto
  all_results: NA
---

```{r, include=FALSE, echo=FALSE}
library(DT)
library(magrittr)
library(tidyverse)
library(htmlwidgets)
library(formattable)
all_results <- jsonlite::unserializeJSON(params$all_results)
```



# Taxon `r params$taxon`

## Wikipedia summary

`r all_results$wikipedia_summary`


## OpenTree

Taxon **`r params$taxon`** has `r all_results$otol$ntaxa` terminal taxa in OpenTree. This is based on taxonomy plus `r nrow(all_results$otol$studies)` studies.


```{r, echo=FALSE}
if(nrow(all_results$otol$studies)>0) {
 # pander::pander(all_results$otol$studies, split.table = Inf)
 datatable(all_results$otol$studies, rownames=FALSE)
}
```

## Datelife

```{r, echo=FALSE}
if(inherits(all_results$datelife_biggest, "phylo")) {
  plot(all_results$datelife_biggest)
  ape::axisPhylo()
} else {
  print("Datelife did not contain a tree")
}
```

## GenBank

In GenBank, there are `r all_results$genbank_count` species listed for this group.

```{r, echo=FALSE}
pander::pander(data.frame(seqs=all_results$genbank_count_by_gene))
```



## PubMed

There are `r all_results$pubmed$count` articles that match `r params$taxon` AND phylogeny on PubMed. Here are the most recent.

```{r, echo=FALSE}
pubmed.df <- all_results$pubmed$recent.papers
if(nrow(pubmed.df)>0) {
  pubmed.df <- pubmed.df[order(pubmed.df$Date, decreasing=TRUE),]
  datatable(pubmed.df)
}
```


## Realm

Here is information about realms (biogeographic regions) by species; frequency of record in each realm.

```{r, echo=FALSE}
realm <- all_results$location_realm_biome$realm
for (i in sequence(nrow(realm))) {
  realm[i,] <- realm[i,]/sum(realm[i,], na.rm=TRUE)
}
datatable(data.frame(realm))
```

## Biome

Here is information about biomes by species; frequency of records in each biome, using formattable

```{r, echo=FALSE}
biome <- all_results$location_realm_biome$biome
for (i in sequence(nrow(biome))) {
  biome[i,] <- biome[i,]/sum(biome[i,], na.rm=TRUE)
}
biome <- round(100*biome,1)

myForm <- function(x) {
	color_tile("white", "orange")
}
biome_df <- data.frame(biome)
formattable(biome_df, lapply(biome_df, myForm))
```